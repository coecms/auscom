
# Makefile template for SX cross compiler
#typical use with netCDF:
# mkmf -t template.nec -c"-Duse_libMPI -Duse_netCDF" path_names /opt/sx/netcdf/include
FC = sxmpif90
LD = sxmpif90
CC = sxmpic++
TOTALVIEW =
NETCDF = /SX/local/netcdf/inst
CPPFLAGS = -D__SX -DLARGE_FILE
FFLAGS = -dw -Wf"-A idbl4 -pvctl fullmsg -msg o -L fmtlist" -R2 -ts. -Chopt -I$(NETCDF)/include-dw-32
CFLAGS = -Xa -I$(NETCDF)/include-dw-32
LDFLAGS = -dw $(LIBS)
LIST = -R2
# LIBS needs to be customized per site
# Note: Users have reported that -lcpp may be needed to resolve the use of the pow() 
# function with versions of the compiler earlier than 340.
LIBS = $(TOTALVIEW) -L$(NETCDF)/lib-dw-32 -lnetcdf

# PRISM libraries
CPLLIBDIR = /cs/home/csdar/bi003/ACCESS/submodels/oasis3_prism_2-5/prism/SX/lib
CPLLIBS   = -L$(CPLLIBDIR) -lpsmile.${CHAN} -L$(CPLLIBDIR) -lmpp_io
CPLINCDIR = /cs/home/csdar/bi003/ACCESS/submodels/oasis3_prism_2-5/prism/SX/build/lib
CPLINCS   = -I$(CPLINCDIR)/psmile.${CHAN}

LIBS      = $(TOTALVIEW) -L$(NETCDF)/lib-dw-32 -lnetcdf $(CPLLIBS)
FFLAGS    = -dw -Wf"-A idbl4 -pvctl fullmsg -msg o -L fmtlist" -R2 -ts. -Chopt -Wf"-pvctl noassume loopcnt=5000000" -I$(NETCDF)/include-dw-32 $(CPLINCS) 

# you should never need to change any lines below.

# see the SX F90 manual for more details on some of the file extensions
# discussed here.
# this makefile template recognizes fortran sourcefiles with extensions
# .f, .f90, .F, .F90. Given a sourcefile <file>.<ext>, where <ext> is one of
# the above, this provides a number of default actions:

# make <file>.T		create a CIF file
# make <file>.L		create a compiler listing
# make <file>.o		create an object file
# make <file>.s		create an assembly listing
# make <file>.x		create an executable file, assuming standalone
#			source

# The macro TMPFILES is provided to slate files like the above for removal.

RM = rm -f
SHELL = /bin/csh
TMPFILES = *.L i.* *.s *.mod

.SUFFIXES: .F .F90 .L .T .f .f90 .h .o .s .x

.f.L:
	$(FC) $(FFLAGS) -c $(LIST) $*.f
.f.T:
	$(FC) $(FFLAGS) -c -cif $*.f
.f.o:
	$(FC) $(FFLAGS) -c $*.f
.f.s:
	$(FC) $(FFLAGS) -S $*.f
.f.x:
	$(FC) $(FFLAGS) -o $*.x $*.f *.o $(LDFLAGS)
.f90.L:
	$(FC) $(FFLAGS) -c $(LIST) $*.f90
.f90.T:
	$(FC) $(FFLAGS) -c -cif $*.f90
.f90.o:
	$(FC) $(FFLAGS) -c $*.f90
.f90.s:
	$(FC) $(FFLAGS) -c -S $*.f90
.f90.x:
	$(FC) $(FFLAGS) -o $*.x $*.f90 *.o $(LDFLAGS)
.F.L:
	$(FC) $(CPPDEFS) $(CPPFLAGS) $(FFLAGS) -c $(LIST) $*.F
.F.T:
	$(FC) $(CPPDEFS) $(CPPFLAGS) $(FFLAGS) -c -cif $*.F
.F.f:
	$(CPP) $(CPPDEFS) $(CPPFLAGS) $*.F > $*.f
.F.o:
	$(FC) $(CPPDEFS) $(CPPFLAGS) $(FFLAGS) -c $*.F
.F.s:
	$(FC) $(CPPDEFS) $(CPPFLAGS) $(FFLAGS) -c -S $*.F
.F.x:
	$(FC) $(CPPDEFS) $(CPPFLAGS) $(FFLAGS) -o $*.x $*.F *.o $(LDFLAGS)
.F90.L:
	$(FC) $(CPPDEFS) $(CPPFLAGS) $(FFLAGS) -c $(LIST) $*.F90
.F90.T:
	$(FC) $(CPPDEFS) $(CPPFLAGS) $(FFLAGS) -c -cif $*.F90
.F90.f90:
	$(CPP) $(CPPDEFS) $(CPPFLAGS) $*.F90 > $*.f90
.F90.o:
	$(FC) $(CPPDEFS) $(CPPFLAGS) $(FFLAGS) -c $*.F90
.F90.s:
	$(FC) $(CPPDEFS) $(CPPFLAGS) $(FFLAGS) -c -S $*.F90
.F90.x:
	$(FC) $(CPPDEFS) $(CPPFLAGS) $(FFLAGS) -o $*.x $*.F90 *.o $(LDFLAGS)

