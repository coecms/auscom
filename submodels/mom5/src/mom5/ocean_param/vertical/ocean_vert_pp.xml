<?xml version="1.0" standalone="no"?>
<!DOCTYPE MODULE SYSTEM 
          "/net2/nnz/opt/tools/xmlDoc/share/xmlDoc/schema/fms.dtd">
<MODULE NAME="ocean_vert_pp_mod" DATE="2012/06/03 00:41:57" HISTORY="http://cobweb.gfdl.noaa.gov/fms-cgi-bin/viewcvs/FMS/ocean/mom5/ocean_param/vertical"><CONTACT EMAIL="GFDL.Climate.Model.Info@noaa.gov"> Stephen Griffies 
</CONTACT><OVERVIEW>
 Vertical viscosity and diffusivity according Pacanowski and Philander (1981)
</OVERVIEW><DESCRIPTION>
 This module computes vertical viscosity and diffusivity according to 
 Pacanowski and Philander (1981).  This scheme is most effective for 
 studies of the tropical circulation.  It computes the vertical mixing
 coefficient based on the Richardson number.  
</DESCRIPTION><INFO><REFERENCE>
 R.C. Pacanowski and G. Philander 
 Parametrization of vertical mixing in numerical models of the tropical ocean
 Journal of Physical Oceanography (1981) vol 11, pages 1442--1451
 </REFERENCE><NOTE>
 This parameterization was designed for equatorial models
 and may not do a good job in mid or high latitudes. Simulations
 in these regions (where vertical shear is small) are improved with
 the addition of solar short wave penetration into the ocean which 
 reduces buoyancy and enhances vertical mixing.
 </NOTE></INFO><NAMELIST NAME="ocean_vert_pp_nml"><DATA NAME="use_this_module" TYPE="logical">
  Must be true to use this module. Default is false. 
  </DATA><DATA NAME="wndmix" UNITS="m^2/sec" TYPE="real">
  Minimum viscosity at bottom of 1st level to simulate 
  missing high frequency windstress components.
  </DATA><DATA NAME="fricmx" UNITS="m^2/sec" TYPE="real">
  Maximum mixing
  </DATA><DATA NAME="diff_cbt_back_pp" UNITS="m^2/sec" TYPE="real">
  Space-time independent background vertical diffusivity 
  thought to be that arising from internal waves. Note that 
  if using Bryan-Lewis background diffusivity, then should 
  set diff_cbt_back_pp=0.0. 
  </DATA><DATA NAME="visc_cbu_back_pp" UNITS="m^2/sec" TYPE="real">
  Background vertical viscosity
  </DATA></NAMELIST><USE NAME="       constants_mod"/><USE NAME="    diag_manager_mod"/><USE NAME="             fms_mod"/><USE NAME="             mpp_mod"/><USE NAME="   ocean_density_mod"/><USE NAME="   ocean_domains_mod"/><USE NAME="ocean_parameters_mod"/><USE NAME="     ocean_types_mod"/><USE NAME=" ocean_vert_util_mod"/><USE NAME=" ocean_workspace_mod"/><SUBROUTINE NAME="ocean_vert_pp_init" INTERFACE=""><DESCRIPTION>
 Initialization for the Pacanowski/Philander vertical mixing scheme

 input:

   dzt    = thickness of vertical levels (m)

   nk     = number of vertical levels

   yt     = latitude of grid points (deg)

   nj     = number of latitudes

   error  = logical to signal problems

 output:

   wndmix = min value for mixing at surface to simulate high freq

            wind mixing (if absent in forcing). (m^2/sec)

   fricmx = maximum mixing (m^2/sec)

   diff_cbt_back_pp = background "diff_cbt" (m^2/sec)

   visc_cbu_back_pp = background "visc_cbu" (m^2/sec)

   diff_cbt_limit = largest "diff_cbt" (m^2/sec)

   visc_cbu_limit = largest "visc_cbu" (m^2/sec)

   error  = true if some inconsistency was found

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="vert_mix_pp" INTERFACE=""><DESCRIPTION>
 This subroutine computes the vertical diffusivity and viscosity
 according to the Pacanowski and Philander scheme. Mixing coefficients  
 are space and time dependent. 

 inputs:

  nk              = number of vertical levels                             
  grav            = gravity (m/sec^2)                                     
  fricmx          = max viscosity (m^2/sec)                               
  wndmix          = min viscosity at bottom of 1st level to simulate      
                    missing high frequency windstress components (m^2/sec)
  visc_cbu_back_pp = background "visc_cbu" (m^2/sec)                      
  diff_cbt_back_pp = background "diff_cbt" (m^2/sec)                      
  visc_cbu_limit  = largest "visc_cbu" in regions of gravitational        
                    instability (m^2/sec)                                 
  diff_cbt_limit  = largest "diff_cbt" in regions of gravitational        
                    instability (m^2/sec)                                 
  riu             = richardson number at bottom of U cells                
  rit             = richardson number at bottom of T cells                

 outputs:

  visc_cbu = viscosity at bottom of U cells (m^2/s)  
  visc_cbt = viscosity at bottom of T cells (m^2/s)  
  diff_cbt = diffusion at bottom of T cells (m^2/s) 

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="ri_for_pp" INTERFACE=""><DESCRIPTION>
 Compute richardson number for the pp scheme
 </DESCRIPTION></SUBROUTINE></MODULE>
