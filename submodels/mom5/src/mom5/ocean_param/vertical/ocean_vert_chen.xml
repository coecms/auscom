<?xml version="1.0" standalone="no"?>
<!DOCTYPE MODULE SYSTEM 
          "/net2/nnz/opt/tools/xmlDoc/share/xmlDoc/schema/fms.dtd">
<MODULE NAME="ocean_vert_chen_mod" DATE="2012/05/25 17:17:37" HISTORY="http://cobweb.gfdl.noaa.gov/fms-cgi-bin/viewcvs/FMS/ocean/mom5/ocean_param/vertical"><CONTACT EMAIL="Russell.Fiedler@csiro.au"> Russell Fiedler 
</CONTACT><REVIEWER EMAIL="GFDL.Climate.Model.Info@noaa.gov"> S.M. Griffies 
</REVIEWER><OVERVIEW>
 Vertical viscosity and diffusivity according Chen scheme 
</OVERVIEW><DESCRIPTION>
 This scheme was originally developed by researchers 
 at the CSIRO Marine and Atmospheric Research and 
 Bureau of Meteorology, both in Australia.
</DESCRIPTION><INFO><REFERENCE>
 Chen, D., L.M. Rothstein and A.J. Busalacchi, 1994:
 A hybrid vertical mixing scheme and its application 
 to tropical ocean models, 
 J. Phys. Oceanogr., 24, 2156-2179
 </REFERENCE><NOTE>
 Surface fresh water contributes to surface buoyancy via conversion to 
 a locally implied salt flux. 
 </NOTE><NOTE>
 This module typically runs with the ocean_shortwave_csiro scheme.
 </NOTE><NOTE>
 Use smf_bgrid since this array contains the primary smf array read in from 
 from the coupler in ocean_core/ocean_sbc.F90, when using the FMS coupler.
 </NOTE></INFO><NAMELIST NAME="ocean_vert_chen_nml"><DATA NAME="use_this_module" TYPE="logical">
  Must be true to use this module. Default is false. 
  </DATA><DATA NAME="debug_this_module" TYPE="logical">
  For debugging.  Default debug_this_module=.false. 
  </DATA><DATA NAME="diff_cbt_iw" UNITS="m^2/sec" TYPE="real">
  Background vertical diffusivity.  Note that if using Bryan-Lewis as a 
  background diffusivity, then should set diff_cbt_iw=0.0. 
  </DATA><DATA NAME="visc_cbu_iw" UNITS="m^2/sec" TYPE="real">
  Background vertical viscosity
  </DATA><DATA NAME="visc_cbu_limit" UNITS="m^2/sec" TYPE="real">
  Enhanced vertical viscosity due to shear instability 
  </DATA><DATA NAME="diff_cbt_limit" UNITS="m^2/sec" TYPE="real">
  Enhanced vertical diffusivity due to shear instability 
  </DATA><DATA NAME="bulk_tn" UNITS="" TYPE="real">
  Bulk turblence parameter n_0
  </DATA><DATA NAME="bulk_tm" UNITS="" TYPE="real">
  Bulk turblence parameter m_0
  </DATA><DATA NAME="hbl_growth_max" UNITS="m/sec" TYPE="real">
  Maximum growth rate of kraus mixed layer 
  </DATA></NAMELIST><USE NAME="            constants_mod"/><USE NAME="         diag_manager_mod"/><USE NAME="                  fms_mod"/><USE NAME="               fms_io_mod"/><USE NAME="          mpp_domains_mod"/><USE NAME="                  mpp_mod"/><USE NAME="        ocean_density_mod"/><USE NAME="        ocean_domains_mod"/><USE NAME="     ocean_parameters_mod"/><USE NAME="ocean_shortwave_csiro_mod"/><USE NAME="          ocean_types_mod"/><USE NAME="           ocean_util_mod"/><USE NAME="      ocean_vert_util_mod"/><USE NAME="      ocean_workspace_mod"/><SUBROUTINE NAME="ocean_vert_chen_init" INTERFACE=""><DESCRIPTION>
 Initialization for the Chen vertical mixing scheme

     input:
       dzt    = thickness of vertical levels (m)                        
       km     = number of vertical levels                               
       yt     = latitude of grid points (deg)                           
       dtts   = density time step (sec)                                 
       dtuv   = internal mode time step (sec)                           
       error  = logical to signal problems                              
       vmixset= logical to determine if a vertical mixing scheme was    
                chosen

     output:
       visc_cbu_limit = visc max due to shear instability  (m**2/sec)   
       diff_cbt_limit = diffusivity ..                     (m**2/sec)   
       visc_cbu_iw  = visc background due to internal waves(m**2/sec)   
       diff_cbt_iw  = diffusivity ..                       (m**2/sec)   
       error  = true if some inconsistancy was found                    

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="vert_mix_chen" INTERFACE=""><DESCRIPTION>

 --Compute interior mixing everywhere:                               
   interior mixing gets computed at all cell interfaces due to constant
   internal wave background activity ("visc_cbu_iw" and "diff_cbt_iw").
   Additionally, mixing can be enhanced by contribution from shear 
   instability which is a function of the local Ri.

 --Boundary layer:

   (A) Boundary layer depth:
       at every gridpoint the depth of the Kraus boundary layer 
       ("hbl") gets computed.

   (B) Boundary layer mixing:
       within the boundary layer, above hbl, vertical mixing is 
       set to a maximum

 inputs

 outputs

  hbl      = boundary layer depth (meters)
  visc_cbu = viscosity coefficient at bottom of U cells (m^2/s) <BR/> 
  diff_cbt = diffusion coefficient at bottom of T cells (m^2/s) <BR/>
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="kraus_turner" INTERFACE=""><DESCRIPTION>

 Calculate the Kraus mixed layer depth

 Note: This formulation assumes a single exponential decay in the solar
 shortwave penetration.

 Use smf_bgrid since this array contains the primary smf array read in from 
 from the coupler in ocean_core/ocean_sbc.F90, when using the FMS coupler.

      real dbloc(ij_bounds)  = local delta buoyancy         (m/s^2)        
      real ustar(ij_bounds)  = surface friction velocity     (m/s)      
      real Bo(ij_bounds)     = surface turbulent buoyancy forcing(m^2/s^3)
      real Bosol(ij_bounds)  = radiative buoyancy forcing (m^2/s^3)       

  output
      real hbl(ij_bounds)        ! boundary layer depth              (m)      
      real mixmask(ij_bounds,nk) ! fraction of cell which resides in mixed layer
      integer kbl(ij_bounds)     ! index of first grid level below hbl        

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="ri_for_chen" INTERFACE=""><DESCRIPTION>
 Compute Richardson number on tracer and velocity cell bottoms. 
  rit = richardson number at bottom of T cells <BR/>
  riu = richardson number at bottom of U cells
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="ocean_vert_chen_restart" INTERFACE=""><DESCRIPTION>
  Write out restart files registered through register_restart_file
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="ocean_vert_chen_end" INTERFACE=""><DESCRIPTION>
 Save the Kraus boundary layer depth to start next time step. 
 </DESCRIPTION></SUBROUTINE></MODULE>
