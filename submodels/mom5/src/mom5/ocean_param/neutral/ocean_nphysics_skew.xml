<?xml version="1.0" standalone="no"?>
<!DOCTYPE MODULE SYSTEM 
          "/net2/nnz/opt/tools/xmlDoc/share/xmlDoc/schema/fms.dtd">
<MODULE NAME="ocean_nphysics_skew_mod" DATE="2012/05/17 13:41:47" HISTORY="http://cobweb.gfdl.noaa.gov/fms-cgi-bin/viewcvs/FMS/ocean/mom5/ocean_param/neutral"><CONTACT EMAIL="t.leslie@unsw.edu.au"> Tim Leslie
</CONTACT><CONTACT EMAIL="GFDL.Climate.Model.Info@noaa.gov"> Stephen M. Griffies
</CONTACT><OVERVIEW>
 Thickness weighted and density weighted time tendency for tracer
 from Laplacian neutral diffusion + Laplacian skew-diffusion.
</OVERVIEW><DESCRIPTION>
 This module computes the cell thickness weighted and density
 weighted tracer tendency from small angle Laplacian neutral diffusion
 plus Laplacian skew-diffusion.  The algorithms for neutral diffusion
 are based on mom4p0d methods.  The algorithm for neutral skewsion
 are based on a projection onto a few of the lowest baroclinic
 modes. This module is experimental, and should be used with caution.
</DESCRIPTION><INFO><REFERENCE>
 S.M. Griffies
 The Gent-McWilliams Skew-flux
 Journal of Physical Oceanography (1998) vol 28 pages 831-841
 </REFERENCE><REFERENCE>
 R. Ferrari, S.M. Griffies, A.J.G. Nurser, and G.K. Vallis
 A boundary value problem for the parameterized mesoscale eddy transport
 Ocean Modelling, 2009.
 </REFERENCE><REFERENCE>
 S.M. Griffies
 Fundamentals of Ocean Climate Models (2004)
 Princeton University Press
 </REFERENCE><REFERENCE>
 S.M. Griffies: Elements of MOM (2012)
 </REFERENCE></INFO><NAMELIST NAME="ocean_nphysics_skew_nml"><DATA NAME="gm_transport" TYPE="logical">
  To compute tendency from GM skewsion. Default gm_transport=.false.
  </DATA><DATA NAME="bc_modes_transport" TYPE="logical">
  To compute tendency from GM skewsion using streamfunction established
  by baroclinic modes. Default bc_modes_transport=.false.
  </DATA><DATA NAME="bvp_transport" TYPE="logical">
  To compute tendency from GM skewsion using streamfunction established
  by a boundary value problem. Default bvp_transport=.false.
  </DATA><DATA NAME="number_bc_modes" TYPE="integer">
  The number of baroclinic modes used to construct the eddy induced
  streamfunction when bc_modes_transport. Default number_bc_modes=1.
  </DATA><DATA NAME="min_bc_speed" UNITS="m/s" TYPE="real">
  The minimum speed used for computing the baroclinic modes.
  Default min_bc_speed=1e-6
  </DATA><DATA NAME="regularize_transport" TYPE="logical">
  To reduce the magnitude of psi in regions of weak stratification,
  using the slope = smax_psi to set the overall scale of the max allowed
  for psi. Default regularize_transport=.true.
  </DATA><DATA NAME="smax_psi" TYPE="real">
  Maximum slope used for setting the overall scale of a modal
  contribution to the parameterized transport.
  Default smax_psi=0.1.
  </DATA><DATA NAME="bvp_constant_speed" TYPE="logical">
  For taking a constant speed to be used for the calculation
  of the BVP streamfunction. Default bvp_constant_speed=.false.
  </DATA><DATA NAME="bvp_speed" UNITS="m/s" TYPE="real">
  For setting the speed weighting the second order derivative operator
  in the BVP streamfunction method:
  c^2 = max[bvp_min_speed, (bvp_speed-c_mode)^2].
  If bvp_constant_speed, then  c^2 = bvp_speed^2.
  Default bvp_speed=0.0, in which case c^2 = c_mode^2.
  </DATA><DATA NAME="bvp_bc_mode" TYPE="integer">
  The particular baroclinic mode used to construct the BVP streamfunction.
  If bvp_bc_mode=0, then will set bc_speed=0 when computing the BVP streamfunction.
  Default bvp_bc_mode=1.
  </DATA><DATA NAME="bvp_min_speed" UNITS="m/s" TYPE="real">
  For setting a minimum speed for use with the calculation
  of the BVP streamfunction. We need  bvp_min_speed&gt;0 to ensure
  that the second order derivative operator contributes to the
  calculation of the streamfunction.
  Default bvp_min_speed=0.1.
  </DATA><DATA NAME="bv_freq_smooth_vert" TYPE="logical">
  To smooth the buoyancy frequency for use in
  computing the baroclinic modes. Generally this field has already
  been smooted in ocean_density_mod, but we maintain the possibility of
  further smoothing here.  Default bv_freq_smooth_vert=.false.
  </DATA><DATA NAME="smooth_transport" TYPE="logical">
  For doing a horizontal 1-2-1 smoothing on the psix and psiy fields.
  This is useful to reduce noise. Default smooth_psi=.true.
  </DATA></NAMELIST><USE NAME="              constants_mod"/><USE NAME="                    fms_mod"/><USE NAME="                    mpp_mod"/><USE NAME="          ocean_domains_mod"/><USE NAME="ocean_nphysics_util_new_mod"/><USE NAME="       ocean_parameters_mod"/><USE NAME="            ocean_types_mod"/><USE NAME="             ocean_util_mod"/><SUBROUTINE NAME="ocean_nphysics_skew_init" INTERFACE=""><DESCRIPTION>
 Initialization routine. 
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="register fields" INTERFACE=""><DESCRIPTION>
 Register diagnostic fields.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="gm_tensor" INTERFACE=""><DESCRIPTION>
 Compute the skew tensor terms using the GM method.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_transport_modes" INTERFACE=""><DESCRIPTION>
 Compute transport as projection onto baroclinic modes.

 Units of upsilon are m^2/sec

 Subroutine computes the baroclinic wave speeds and the dimensionless
 baroclinic mode eigenfunction for the vertical velocity baroclinic
 modes.  These modes vanish at the surface and the bottom.  We use
 the Chelton etal WKB analytic formulae for the speeds and modes.

 The baroclinic modes are dimensionless, and normalized over the
 depth of the ocean, from free surface to bottom.

 The speeds are m/sec.

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="do_regularize_transport" INTERFACE=""><DESCRIPTION>
 regularize the transport to keep magnitude
 under control in regions of weak vertical stratification.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_transport_bvp" INTERFACE=""><DESCRIPTION>
 Compute transport by solving a boundary value problem.

 psi is centered on bottom of tracer cell; for example,
 psi(k=1)=psi at bottom of tracer cell k=1.
 psi vanishes at the ocean surface: psi(k=0)=0
 and ocean bottom: psi(k=kmt)=0.

 We solve for psi(k=1,kmt-1) using a tridiagonal solver from
 Section 2.4 of Press etal 1986.

 Units of psi are m^2/sec

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="invtri_bvp" INTERFACE=""><DESCRIPTION>
 Solve the vertical diffusion equation implicitly using the
 method of inverting a tridiagonal matrix as described in
 Numerical Recipes in Fortran, The art of Scientific Computing,
 Second Edition, Press, Teukolsky, Vetterling, Flannery, 1992
 pages 42,43.

 enforce upsilon(k=kmt) = 0 via use of mask(k+1).

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="do_smooth_transport" INTERFACE=""><DESCRIPTION>
 </DESCRIPTION></SUBROUTINE></MODULE>
