<?xml version="1.0" standalone="no"?>
<!DOCTYPE MODULE SYSTEM 
          "/net2/nnz/opt/tools/xmlDoc/share/xmlDoc/schema/fms.dtd">
<MODULE NAME="ocean_nphysics_flux_mod" DATE="2012/05/17 13:41:47" HISTORY="http://cobweb.gfdl.noaa.gov/fms-cgi-bin/viewcvs/FMS/ocean/mom5/ocean_param/neutral"><CONTACT EMAIL="tim.leslie@gmail.com"> Tim Leslie
</CONTACT><CONTACT EMAIL="GFDL.Climate.Model.Info@noaa.gov"> Stephen M. Griffies
</CONTACT><OVERVIEW>
 Compute the neutral physics fluxes. 
</OVERVIEW><DESCRIPTION>
 This module computes the neutral physics fluxes. 
</DESCRIPTION><INFO><REFERENCE>
 S.M. Griffies 
 Fundamentals of Ocean Climate Models (FOCM) (2004)
 Princeton University Press 
 </REFERENCE><REFERENCE>
 S.M. Griffies: Elements of MOM (2012)
 </REFERENCE></INFO><NAMELIST NAME="ocean_nphysics_flux_nml"><DATA NAME="diffusion_all_explicit" TYPE="logical">
 To compute K33 explicitly in time.  This setting is meant
 only for debugging tests, since in general the simulation 
 will go unstable. 
 Default diffusion_all_explicit=.false.
  </DATA><DATA NAME="neutral_physics_limit" TYPE="logical">
 Revert to horizontal diffusion when tracer falls outside specified range.
 Default neutral_physics_limit=.true., so to keep tracers from going
 too far outside of physical range. 
  </DATA></NAMELIST><USE NAME="              constants_mod"/><USE NAME="                    fms_mod"/><USE NAME="            mpp_domains_mod"/><USE NAME="                    mpp_mod"/><USE NAME="          ocean_domains_mod"/><USE NAME="ocean_nphysics_util_new_mod"/><USE NAME="        ocean_operators_mod"/><USE NAME="            ocean_types_mod"/><USE NAME="             ocean_util_mod"/><SUBROUTINE NAME="ocean_nphysics_flux_init" INTERFACE=""><DESCRIPTION>
 Initialise namelist variables and prepare diagnostics.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="register fields" INTERFACE=""><DESCRIPTION>
 Register diagnostic fields.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="flux_calculations" INTERFACE=""><DESCRIPTION>
 This function computes the thickness weighted tendency of tracers
 due to neutral physics as well as the implicit vertical diffusivity
 term.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_mass_diff" INTERFACE=""><DESCRIPTION>
 Subroutine computes the vertical neutral diffusion tracer flux component.
 Compute this component for all tracers at level k.
 Surface and bottom boundary condition fz(k=0)=fz(k=kmt(i,j))=0

 fz has physical dimensions (density*diffusivity*tracer gradient)

 This is nearly the same as the subroutine in ocean_nphysicsA.

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="geometric_terms" INTERFACE=""><DESCRIPTION>
 Calculate the density weighted quarter cell volumes of the triads.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_33_term" INTERFACE=""><DESCRIPTION>
 K33 is the (3,3) term in small angle Redi diffusion tensor.
 It is broken into an explicit in time piece and implicit
 in time piece.  It is weighted by density for non-Boussinesq
 and rho0 for Boussinesq.

 K33 has units (kg/m^3)*m^2/sec.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_fluxes" INTERFACE=""><DESCRIPTION>
 Computes the tracer fluxes due to neutral diffusion and skew diffusion.
 Fluxes are computed at the tracer cell faces and have units of [kg*T/s].
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="apply_tracer_limits" INTERFACE=""><DESCRIPTION>
 If the neutral_physics_limit flag is set, then the flux used in regions of large
 tracer gradients (as defined by T_prog(n)tmask_limit) are set to have purely
 horizontal diffusion, with no vertical or skew terms.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="update_tendencies" INTERFACE=""><DESCRIPTION>
 Update the tendency for each tracer in each cell based on the total flux
 flowing through each of the six cell faces. The tendency is calculated 
 separately for the flux due to neutral diffusion and due skew diffusion.
 </DESCRIPTION></SUBROUTINE></MODULE>
