<?xml version="1.0" standalone="no"?>
<!DOCTYPE MODULE SYSTEM 
          "/net2/nnz/opt/tools/xmlDoc/share/xmlDoc/schema/fms.dtd">
<MODULE NAME="ocean_submesoscale_mod" DATE="0000/00/00 00:00:00" HISTORY="http://cobweb.gfdl.noaa.gov/fms-cgi-bin/viewcvs/FMS/ocean/mom5/ocean_param/lateral"><CONTACT EMAIL="GFDL.Climate.Model.Info@noaa.gov"> S. M. Griffies 
</CONTACT><OVERVIEW>
 This module computes a streamfunction within
 the upper surface boundary layer, and applies this
 streamfunction to all tracers. It also optionally 
 applies horizontal diffusion in the surface layer 
 as determined by the strength of the streamfunction. 
</OVERVIEW><DESCRIPTION>
 This module computes a streamfunction within
 the upper surface boundary layer, and applies this
 streamfunction to all tracers.  It also optionally 
 applies horizontal diffusion in the surface layer 
 as determined by the strength of the streamfunction. 
</DESCRIPTION><INFO><REFERENCE>
 Fox-Kemper, Ferrari, and Hallberg 2008: Parameterization of 
 mixed layer eddies. Part I: theory and diagnosis
 Journal of Physical Oceanography, vol. 38, pages 1145-1165. 
 </REFERENCE><REFERENCE>
 Fox-Kemper, Danabasoglu, Ferrari, and Hallberg 2008: 
 Parameterizing submesoscale physics in global models.
 Clivar Exchanges, vol 13, no.1,  Jan2008. pages 3-5.
 </REFERENCE><REFERENCE>
 Fox-Kemper, Danabasoglu, Ferrari, Griffies, Hallberg,
 Holland, Peacock, Samuels, 2011: Parameterization of 
 Mixed Layer Eddies. III: Global Implementation and 
 Impact on Ocean Climate Simulations, Ocean Modelling, 
 vol. 39, pages 61-78.
 </REFERENCE><REFERENCE>
 Griffies, 2012: Elements of MOM 
 </REFERENCE></INFO><NAMELIST NAME="ocean_submesoscale_nml"><DATA NAME="use_this_module=" TYPE="logical">
  Must be .true. to use this module.
  </DATA><DATA NAME="debug_this_module" TYPE="logical">
  For debugging purposes.
  </DATA><DATA NAME="diag_step" TYPE="integer">
  Number of time steps between computing max bottom value for
  wrho_bt_submeso. Default diag_step=1200.
  </DATA><DATA NAME="submeso_skew_flux" TYPE="logical">
  For computing the tendency as convergence of skew flux.
  This is the recommended method.
  Default submeso_skew_flux=.true.
  </DATA><DATA NAME="submeso_advect_flux" TYPE="logical">
  For computing the tendency as convergence of advective flux.
  This approach uses either a flux limited sweby advection or 
  first order upwind, both of which ensure that the resulting 
  tendency will not create extrema in the tracer field.  
  Default submeso_advect_flux=.false.
  </DATA><DATA NAME="submeso_advect_upwind" TYPE="logical">
  For computing the tendency as convergence of a first order
  advective flux. 
  Default submeso_advect_upwind=.true.
  </DATA><DATA NAME="submeso_advect_sweby" TYPE="logical">
  For computing the tendency as convergence of a sweby 
  advective flux. This routine is incomplete and has a bug.  
  Default submeso_advect_sweby=.false.
  </DATA><DATA NAME="submeso_advect_limit" TYPE="logical">
  For limiting the value of the horizontal transports 
  to be less than a velocity scale set by limit_psi_velocity_scale.
  This option is not needed if limit_psi=.true.
  Default submeso_advect_limit=.false.
  </DATA><DATA NAME="submeso_advect_zero_bdy" TYPE="logical">
  For removing the advective transport next to boundaries. 
  This is useful since computation of the advective transport
  velocity components can be problematic next to boundaries. 
  Default submeso_advect_zero_bdy=.false.
  </DATA><DATA NAME="smooth_advect_transport" TYPE="logical">
  For doing a horizontal 1-2-1 smoothing on the diagnosed  
  uhrho_et_submeso and vhrho_nt_submeso fields.  
  Default smooth_advect_transport=.true.
  </DATA><DATA NAME="smooth_advect_transport_num" TYPE="integer">
  Number of iterations for the smooothing of horizontal transport. 
  Default smooth_advect_transport_num=2.
  </DATA><DATA NAME="submeso_diag_advect_transport" TYPE="logical">
  For diagnosing the advective mass transport even when 
  using the skew approach.  
  Default submeso_diag_advect_transport=.false.
  </DATA><DATA NAME="submeso_diffusion" TYPE="logical">
  For computing a horizontal diffusive flux in the boundary layer
  as determined by the strength of the vector streamfunction.
  Default submeso_diffusion=.false.
  </DATA><DATA NAME="submeso_diffusion_biharmonic" TYPE="logical">
  The default submeso diffusion is Laplacian. However, one may wish to
  use a biharmonic mixing operator instead.  
  Default submeso_diffusion_biharmonic=.false. 
  </DATA><DATA NAME="submeso_diffusion_scale" UNITS="dimensionless" TYPE="real">
  A dimensionless scaling to be used for scaling up or down the effects from 
  horizontal diffusion in the boundary layer. Default submeso_diffusion_scale=1.0.
  </DATA><DATA NAME="use_hblt_constant" TYPE="logical">
  For running with a constant boundary layer depth. This for the case when 
  not using a realistic mixed layer scheme.  Default use_hblt_constant=.false.
  </DATA><DATA NAME="constant_hblt" UNITS="metre" TYPE="real">
  The boundary layer depth for the case when use_hblt_constant=.true.
  Default constant_hblt=100.0.
  </DATA><DATA NAME="use_hblt_equal_mld" TYPE="logical">
  For using the diagnosed mld as the hblt for submeso.  
  This is useful for those test models that do not have a mixed layer
  scheme enabled, such as KPP, where the mixed layer scheme provides a
  boundary layer depth.  In this case, it is sensible to employ the diagnosed
  mixed layer depth for the submeso scheme. Additionally, in general it is 
  more physical to use the mld than the KPP hblt as the depth over which 
  the submesoscale eddies act.  Hence, default use_hblt_equal_mld=.true.
  </DATA><DATA NAME="min_kblt" UNITS="dimensionless" TYPE="integer">
  The minimum number of vertical cells in the surface boundary layer 
  that are required in order to compute the submesoscale streamfunction.
  Default min_kblt=4.  Need at least three to fit a parabola with zero 
  streamfunction at the top and bottom of the boundary layer.  
  </DATA><DATA NAME="minimum_hblt" TYPE="real" UNITS="metre">
  For setting a floor to the hblt used for submesoscale scheme. 
  Default minimum_hblt=0.0.
  </DATA><DATA NAME="smooth_hblt" TYPE="logical">
  For smoothing on the submeso bldepth field. This is useful 
  since the bldepth obtained from KPP or diagnosed mld can 
  have some grid noise. 
  Default smooth_hblt=.false. since this agrees with legacy.
  Note that this scheme fails to reproduce across
  processor layout, so it remains broken.  
  </DATA><DATA NAME="smooth_hblt_num" TYPE="integer">
  Number of iterations for the smooothing of bldepth. 
  Default smooth_hblt_num=1.
  </DATA><DATA NAME="use_psi_legacy" TYPE="logical">
  For computing psi using older legacy methods. 
  These methods are not ideal, and can be problematic
  depending on nml settings for the limiters and smoothers.
  This option is retained only for legacy purposes. 
  Default use_psi_legacy=.false.
  </DATA><DATA NAME="smooth_psi" TYPE="logical">
  For doing a horizontal 1-2-1 smoothing on the 
  psix_horz and psiy_horz fields. 
  Default smooth_psi=.true.
  </DATA><DATA NAME="smooth_psi_num" TYPE="integer">
  Number of iterations for the smooothing of psi. 
  Default smooth_psi_num=2.
  </DATA><DATA NAME="limit_psi" TYPE="logical">
  For limiting the magnitude of psi in order to reduce possibility of 
  model crashes. Rescales the full psi to maintain vertical structure
  but to keep overall magnitude within bounds.  
  Default limit_psi=.false.
  </DATA><DATA NAME="limit_psi_velocity_scale" UNITS="metre/sec" TYPE="real">
  Velocity scale used to limit the value of psi when limit_psi=.true.
  Default limit_psi_velocity_scale=5.0
  </DATA><DATA NAME="submeso_limit_flux" TYPE="logical">
  For limiting the fluxes arising from submeso scheme, according to 
  tmask_limit. When reach a point where tmask_limit=1.0, then set
  the submeso flux for this cell to zero. 
  Default submeso_limit_flux=.true.
  </DATA><DATA NAME="coefficient_ce" UNITS="dimensionless" TYPE="real">
  The dimensionless coefficient from the Fox-Kemper etal scheme. 
  They recommend setting coefficient_ce between 0.06 and 0.08.  
  Default coefficient_ce=0.07.
  </DATA><DATA NAME="time_constant" UNITS="seconds" TYPE="real">
  Timescale to mix momentum across the mixed layer.  
  Default time_constant=86400.0 = 1day. 
  </DATA><DATA NAME="front_length_const" UNITS="metre" TYPE="real">
  Take constant horizontal length scale of submesoscale front. 
  Default front_length_const=5e3.
  </DATA><DATA NAME="front_length_deform_radius" TYPE="logical">
  To compute the front length using the mixed layer deformation 
  radius. Default front_length_deform_radius=.true.  Note, 
  will have a floor on the variable front length set by the
  nml setting for front_length_const.
  </DATA></NAMELIST><USE NAME="        constants_mod"/><USE NAME="     diag_manager_mod"/><USE NAME="              fms_mod"/><USE NAME="      mpp_domains_mod"/><USE NAME="              mpp_mod"/><USE NAME="     time_manager_mod"/><USE NAME="    ocean_domains_mod"/><USE NAME="  ocean_operators_mod"/><USE NAME=" ocean_parameters_mod"/><USE NAME="ocean_tracer_diag_mod"/><USE NAME="ocean_tracer_util_mod"/><USE NAME="      ocean_types_mod"/><USE NAME="       ocean_util_mod"/><USE NAME="  ocean_workspace_mod"/><SUBROUTINE NAME="ocean_submesoscale_init" INTERFACE=""><DESCRIPTION>
 Initialization for the ocean_submesoscale module.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="submeso_restrat" INTERFACE=""><DESCRIPTION>
 This routine computes a thickness and density weighted time tendency
 for each tracer, arising from the effects of parameterized 
 submesoscale eddies acting in the surface mixed layer.  
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_bldepth" INTERFACE=""><DESCRIPTION>
 Compute the boundary layer depth and kblt.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="tracer_derivs" INTERFACE=""><DESCRIPTION>
 Compute the tracer derivatives, with the  
 lateral derivatives computed along constant k-level.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="salinity_derivs" INTERFACE=""><DESCRIPTION>
 Compute the density-salinity derivatives, with lateral 
 derivative computed on constant k-level. 
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_psi" INTERFACE=""><DESCRIPTION>
 Compute the vector streamfunction from parameterized 
 submesoscale restratification. 

 Units of psi are m^2/sec

 psix is defined on north face of tracer cell for jq=0,1.
 psiy is defined on east  face of tracer cell for ip=0,1.

 NOTE: the mpp updates for psix and psiy are treated as a 
 scalar, whereas they are actually components to a pseudo-vector.
 Some further thought is required for the tripolar grid. We ignore
 this detail in the present implementation.  

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_psi_legacy" INTERFACE=""><DESCRIPTION>
 Compute the vector streamfunction 

 Units of psi are m^2/sec

 If computing skewsion tendency, then need psi at depth_zt. 
 If computing advection tendency, then need psi at depth_zwt. 

 Jan2012: This scheme has problems with the limiters and smoothers.
 These problems become particularly egregious when trying to compute
 an advective flux rather than a skew flux.  This routine is 
 retained only for legacy purposes. 
 Stephen.Griffies

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_transport" INTERFACE=""><DESCRIPTION>
 Compute the mass transport from submeso.  

 This routine is a diagnostic routine if skewsion, and 
 part of the calculation of the eddy-induced velocity if 
 advective approach used. 

 Comments on the scheme:
 
 1/ compute vertical component from convergence of horizontal, just
 as for the vertical velocity component for the Eulerian transport.
 
 2/ wrho_bt_submeso(:,:,k=0) = 0.0 by definition

 3/ expand the BDX_ET and BDY_NT operators for efficiency.  

 4/ mask to zero those regions where the horizontal divergence 
 vanishes, as these are regions beneath the submeso boundary 
 layer.  Base the mask on horz divergence rather than kblt(i,j), 
 since any smoothing performed to uhrho_et_submeso and vhrho_nt_submeso
 will modify the region of nonzero submesoscale advection so that 
 it reaches potentially to below kblt.  

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_submeso_skewsion" INTERFACE=""><DESCRIPTION>
 Compute tendency from submeso skewsion. 
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_flux_x" INTERFACE=""><DESCRIPTION>

 Subroutine computes the zonal submesoscale tracer skew flux component.

 fx has physical dimensions (area*diffusivity*density*tracer gradient)

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_flux_y" INTERFACE=""><DESCRIPTION>

 Subroutine computes the meridional submesoscale tracer skew flux component.

 fy has physical dimensions (area*diffusivity*density*tracer gradient)

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_flux_z" INTERFACE=""><DESCRIPTION>

 Subroutine computes the vertical submeso tracer skew flux component.

 Surface and bottom boundary condition fz(k=0)=fz(k=kmt(i,j))=0

 fz has physical dimensions (density*diffusivity*tracer gradient)

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_submeso_upwind" INTERFACE=""><DESCRIPTION>
 First order upwind to compute the tendency from submeso advection.

 Although this method adds diffusion, some of the mixing 
 is physically relevant. Absent this mixing, the submesoscale 
 parameterization is incomplete. The submesoscale parameterization is, 
 afterall, active only in the mixed layer, where there is lot of 
 physical mixing.  

 Use of first order upwind ensures that the tendency computed
 from submesoscale parameterization will not, in principle, 
 introduce extrema. However, there remain some issues with large
 tendencies appearing near boundaries that may compromise this 
 monotonicity property.   

 Apply masks so that there is no flux leaving cell next to bottom.  

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_submeso_sweby" INTERFACE=""><DESCRIPTION>
 Sweby scheme to compute the tendency from submeso advection.
 Algorithm taken after advect_tracer_sweby_all in the module
 ocean_tracers/ocean_tracer_advect.F90.

 Jan 2012: Stephen.Griffies
 This scheme has known bugs; it is not meant for general use. 

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="compute_submeso_diffusion" INTERFACE=""><DESCRIPTION>
 Compute tendency from submeso horizontal diffusion.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="maximum_bottom_w_general" INTERFACE=""><DESCRIPTION>
 Compute maximum vertical velocity from submeso.
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="transport_on_nrho_submeso" INTERFACE=""><DESCRIPTION>
 Classify horizontal submeso mass transport according to neutral
 density classes. 

 NOTE: This diagnostic works with transport integrated from bottom to 
 a particular cell depth. To get transport_on_rho_submeso, a remapping is 
 performed, rather than the binning done for transport_on_nrho_submeso_adv.

 This is the same algorithm as used for GM skew fluxes on rho surfaces. 

 Caveat: Since the submeso scheme operates only in the mixed layer,
 there are difficulties mapping this transport to neutral density 
 layers.  The user should be mindful of the problems with this 
 remapping.  An alternative that may be more suitable is to use 
 Ferret to remap the time mean submeso transport to the time mean
 neutral density surfaces.  There are missing correlations, but for
 many purposes, the Ferret remapping may be preferable.  

 Briefly, the Ferret command is the following:
 
 let ty_trans_nrho_submeso_new = ZAXREPLACE(TY_TRANS_SUBMESO,NEUTRAL_RHO,TY_TRANS_NRHO)
 where TY_TRANS_SUBMESO is the level-space transport
       NEUTRAL_RHO is the level space version of the neutral density 
       TY_TRANS_NRHO is any density space field whose vertical coordinates 
                     are accessed for the remapping. 
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="transport_on_nrho_submeso_adv" INTERFACE=""><DESCRIPTION>
 Classify horizontal transport according to neutral density classes. 

 Based on transport_on_nrho in ocean_diag/ocean_adv_diag.F90.

 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="watermass_diag_init" INTERFACE=""><DESCRIPTION>
 Initialization of watermass diagnostic output files. 
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="watermass_diag" INTERFACE=""><DESCRIPTION>
 Diagnose effects from submesoscale on watermass transformation.  
 </DESCRIPTION></SUBROUTINE><SUBROUTINE NAME="watermass_diag_diffusion" INTERFACE=""><DESCRIPTION>
 Diagnose effects from submesoscale horizontal diffusion 
 on watermass transformation.  
 </DESCRIPTION></SUBROUTINE></MODULE>
